@page "/"

@using CrowSquares.Models
@inherits GameBase

<PageTitle>CrowSquares Game</PageTitle>

<MudDropContainer
    @ref="DropContainer"
    T="DropItem" 
    Items="Items"
    CanDrop="@( (item, identifier ) => CanDrop(item, identifier))"
    ItemsSelector="@((item, dropZone) => item.Zone == dropZone)"
    ItemIsDisabled="@( item => !item.Zone.Contains("gutter", StringComparison.Ordinal))"
    ItemDropped="ItemUpdated"
    @ondragend="OnDragEnd"
>
    <ChildContent>
        <MudGrid Justify="Justify.Center">
            <MudItem xs="8" >
                
                    @for (var r = 0; r < 9; r++)
                    {
                        var row = r;
                        <MudGrid Style="@(RowStyle)" Spacing="0" Justify="Justify.Center">
                            @for (var c = 0; c < 9; c++)
                            {
                                var backgroundColor = "transparent";
                                if ((row is <= 2 or >= 6 && c is <= 2 or >= 6)
                                    || (row is >= 3 and <= 5 && c is >= 3 and <= 5))
                                {
                                    backgroundColor = "lightblue";
                                }
                                var coords = $"{row.ToString()}{c.ToString()}";
                                <MudItem xs="1">
                                    <div
                                        @ondragenter="@(() => OnDragEnter(coords))"
                                        @ondragleave="@(() => OnDragLeaveGrid(coords))">
                                        <MudDropZone
                                            Style="@($"aspect-ratio: 1/1;background-color: {backgroundColor}")"
                                            @ref="@(Grid[coords])"
                                            T="DropItem"
                                            Identifier="@(coords)"
                                            DraggingClass="mud-theme-success"
                                            Class="d-flex justify-center align-center border-2 border-solid docs-gray-bg mud-border-lines-default">
                                        </MudDropZone>
                                    </div>
                                </MudItem>
                            }
                        </MudGrid>
                    }
                
            </MudItem>
        </MudGrid>
        
        <MudGrid Justify="Justify.Center">
            <MudItem xs="3">
                <MudDropZone 
                    T="DropItem"
                    ItemIsDisabled="@(item => !item.FitsInGrid)"
                    @ref="Gutter0"
                    @ondragstart="() => OnDragStartGutter(Gutter0)"
                    @ondragend="() => OnDragEndGutter(Gutter0)"
                    Identifier="gutter0"
                    DisabledClass="gutter-disabled">
                </MudDropZone>
            </MudItem>
            <MudItem xs="3">
                <MudDropZone
                    T="DropItem"
                    ItemIsDisabled="@(item => !item.FitsInGrid)"
                    @ref="Gutter1"
                    @ondragstart="() => OnDragStartGutter(Gutter1)"
                    @ondragend="() => OnDragEndGutter(Gutter1)"
                    Identifier="gutter1"
                             DisabledClass="gutter-disabled">
                </MudDropZone>
            </MudItem>
            <MudItem xs="3">
                <MudDropZone
                    ItemIsDisabled="@(item => !item.FitsInGrid)"
                    T="DropItem"
                    @ref="Gutter2"
                    @ondragstart="() => OnDragStartGutter(Gutter2)"
                    @ondragend="() => OnDragEndGutter(Gutter2)"
                    Identifier="gutter2"
                    DisabledClass="gutter-disabled"
                >
                </MudDropZone>
            </MudItem>
        </MudGrid>
    </ChildContent>
    <ItemRenderer>
        <div class="d-flex justify-center align-center flex-grow-1">
            <MudIcon Icon="@context.Icon" Color="@context.Color" Size="Size.Large" />
        </div>
    </ItemRenderer>
</MudDropContainer>

<MudButton Size="Size.Large" Variant="Variant.Filled" Color="Color.Primary" OnClick="GenerateShapes">New Shapes</MudButton>

<MudButton Size="Size.Large" Variant="Variant.Filled" Color="Color.Error" OnClick="ClearGrid">Clear Grid</MudButton>

<MudText Typo="Typo.h3">C: @CompletedColumns</MudText>

<MudText Typo="Typo.h3">R: @CompletedRows</MudText>
<MudText Typo="Typo.h3">S: @CompletedSquares</MudText>

<style>
    .gutter-disabled svg {
        color:red!important
    }
</style>

